'2021-04-11T23:26:19.201163':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:13:22: medium: overflow check might fail (e.g. when AA = Natural''Last
    and AB = 1) [possible explanation: loop at line 11 should mention AA and AB in
    a loop invariant][#0]

    multi.adb:15:18: medium: overflow check might fail (e.g. when AA = 1073741824)
    [possible explanation: loop at line 11 should mention AA in a loop invariant][#1]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 1 and Mult''Result = 0)[#2]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:26:19.201163'
'2021-04-11T23:30:20.090257':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:14:22: medium: overflow check might fail (e.g. when AA = Natural''Last
    and AB = 1) [possible explanation: loop at line 12 should mention AA and AB in
    a loop invariant][#0]

    multi.adb:16:18: medium: overflow check might fail (e.g. when AA = 1073741824)
    [possible explanation: loop at line 12 should mention AA in a loop invariant][#1]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 1 and Mult''Result = 0)[#2]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:30:20.090257'
'2021-04-11T23:35:14.388996':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:14:22: medium: overflow check might fail (e.g. when AA = 65533 and AB
    = 2147418115) [possible explanation: loop invariant at line 18 should mention
    AB][#0]

    multi.adb:18:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA < A * B (e.g. when A = 2 and AA = 2 and B = 1)[#1]

    multi.adb:18:32: medium: loop invariant might fail in first iteration, cannot
    prove AA < A * B (e.g. when A = 0 and AA = 0 and B = 1)[#2]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#3]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:35:14.388996'
'2021-04-11T23:35:29.910787':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    multi.adb:18:36: missing operand

    gnatprove: error during generation of Global contracts

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:35:29.910787'
'2021-04-11T23:35:38.208538':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:14:22: medium: overflow check might fail (e.g. when AA = 65534 and AB
    = 2147418114) [possible explanation: loop invariant at line 18 should mention
    AB][#0]

    multi.adb:18:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#1]

    multi.adb:18:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#2]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#3]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:35:38.208538'
'2021-04-11T23:36:07.438446':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:18:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#1]

    multi.adb:18:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#2]

    multi.adb:19:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 2 and AB = 7 and B = 3)[#0]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#3]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:36:07.438446'
'2021-04-11T23:40:23.245893':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:18:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#5]

    multi.adb:18:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#6]

    multi.adb:19:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 3 and AB = 10 and B = 3)[#4]

    multi.adb:20:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = B/B1 * A (e.g. when A = 3 and AB = 6 and B = 13 and
    B1 = 2)[#2]

    multi.adb:20:32: medium: loop invariant might fail in first iteration, cannot
    prove AB = B/B1 * A (e.g. when A = 2 and AB = 2 and B = 5 and B1 = 2)[#3]

    multi.adb:20:38: medium: divide by zero might fail (e.g. when B1 = 0)[#0]

    multi.adb:20:42: medium: overflow check might fail (e.g. when A = 2 and B = 1
    and B1 = 0)[#1]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#7]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-11T23:40:23.245893'
'2021-04-12T00:10:45.177653':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:8:07: warning: initialization of "Tmp" has no effect[#0]

    multi.adb:16:17: warning: unused assignment[#1]

    multi.adb:16:24: medium: overflow check might fail (e.g. when Pow = Natural''Last
    and Tmp = 1) [possible explanation: loop invariant at line 22 should mention Tmp][#2]

    multi.adb:21:21: medium: overflow check might fail (e.g. when Pow = 1073741824)[#3]

    multi.adb:22:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#7]

    multi.adb:22:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#8]

    multi.adb:23:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 2 and AB = 7 and B = 3)[#6]

    multi.adb:24:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = A *Pow (e.g. when A = 1 and AB = 1 and Pow = 2)[#4]

    multi.adb:24:32: medium: loop invariant might fail in first iteration, cannot
    prove AB = A *Pow (e.g. when A = 1 and AB = 1 and Pow = 2)[#5]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#9]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:10:45.177653'
'2021-04-12T00:11:00.978680':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:16:24: medium: overflow check might fail (e.g. when Pow = Natural''Last
    and Tmp = 1) [possible explanation: loop invariant at line 22 should mention Pow][#0]

    multi.adb:21:21: medium: overflow check might fail (e.g. when Pow = 1073741824)
    [possible explanation: loop invariant at line 22 should mention Pow][#1]

    multi.adb:22:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#5]

    multi.adb:22:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#6]

    multi.adb:23:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 2 and AB = 7 and B = 3)[#4]

    multi.adb:24:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = A * Tmp (e.g. when A = 1 and AB = 0 and Tmp = 1)[#3]

    multi.adb:24:39: medium: overflow check might fail (e.g. when A = 32767 and Tmp
    = 65537)[#2]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#7]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:11:00.978680'
'2021-04-12T00:11:39.900783':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:22:32: medium: loop invariant might fail in first iteration, cannot
    prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#4]

    multi.adb:22:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA <= A * B (e.g. when A = 1 and AA = 2 and B = 1)[#5]

    multi.adb:23:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 2 and AB = 7 and B = 3)[#3]

    multi.adb:24:32: medium: loop invariant might fail in first iteration, cannot
    prove Pow < AA (e.g. when AA = 0 and Pow = 2)[#2]

    multi.adb:25:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = A * Tmp (e.g. when A = 2 and AB = 3 and Tmp = 2)[#1]

    multi.adb:25:39: medium: overflow check might fail (e.g. when A = 6 and Tmp =
    65537)[#0]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#6]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:11:39.900783'
'2021-04-12T00:13:52.137555':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:13:22: medium: overflow check might fail (e.g. when AA = Natural''Last
    and AB = 1) [possible explanation: loop at line 11 should mention AA and AB in
    a loop invariant][#0]

    multi.adb:15:18: medium: overflow check might fail (e.g. when AA = 1073741824)
    [possible explanation: loop at line 11 should mention AA in a loop invariant][#1]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 1 and Mult''Result = 0)[#2]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:13:52.137555'
'2021-04-12T00:19:04.456807':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:17:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA < A * B (e.g. when A = 2 and AA = 2 and B = 1)[#1]

    multi.adb:17:32: medium: loop invariant might fail in first iteration, cannot
    prove AA < A * B (e.g. when A = 0 and AA = 0 and B = 1)[#2]

    multi.adb:18:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 2 and AB = 7 and B = 3)[#0]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#3]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:19:04.456807'
'2021-04-12T00:23:20.566862':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    multi.adb:18:14: "=" should be ":="

    gnatprove: error during generation of Global contracts

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:23:20.566862'
'2021-04-12T00:24:48.233661':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:18:21: medium: overflow check might fail (e.g. when Pow = 1073741824)[#0]

    multi.adb:19:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA < A * B (e.g. when A = 2 and AA = 2 and B = 1)[#4]

    multi.adb:19:32: medium: loop invariant might fail in first iteration, cannot
    prove AA < A * B (e.g. when A = 0 and AA = 0 and B = 1)[#5]

    multi.adb:20:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 6 and AB = 31 and B = 5)[#3]

    multi.adb:21:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = A * (B rem Pow) (e.g. when A = 14 and AB = 0 and
    B = 13 and Pow = 4)[#2]

    multi.adb:21:44: medium: divide by zero might fail (e.g. when Pow = 0)[#1]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#6]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:24:48.233661'
'2021-04-12T00:27:41.979267':
  category: GNATprove
  files:
  - /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove
  label: Basic Prove All Sources
  output: 'Phase 1 of 2: generation of Global contracts ...

    Phase 2 of 2: flow analysis and proof ...

    multi.adb:19:32: medium: loop invariant might fail in first iteration, cannot
    prove AA < A * B (e.g. when A = 0 and AA = 0 and B = 1)[#4]

    multi.adb:19:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AA < A * B (e.g. when A = 2 and AA = 2 and B = 1)[#5]

    multi.adb:20:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB <= A * B (e.g. when A = 6 and AB = 31 and B = 5)[#3]

    multi.adb:21:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove Pow <= B (e.g. when B = 1 and Pow = 2)[#2]

    multi.adb:22:32: medium: loop invariant might not be preserved by an arbitrary
    iteration, cannot prove AB = A * (B rem Pow) (e.g. when A = 3 and AB = 0 and B
    = 3 and Pow = 2)[#1]

    multi.adb:22:44: medium: divide by zero might fail (e.g. when Pow = 0)[#0]

    multi.ads:6:16: medium: postcondition might fail, cannot prove Mult''Result =
    A * B (e.g. when A = 1 and B = 2 and Mult''Result = 0)[#6]

    Summary logged in /home/pawel/Desktop/ADA/lista3/zadanie1/obj/gnatprove/gnatprove.out

    '
  output_parser: GNATprove_Parser
  timestamp: '2021-04-12T00:27:41.979267'
