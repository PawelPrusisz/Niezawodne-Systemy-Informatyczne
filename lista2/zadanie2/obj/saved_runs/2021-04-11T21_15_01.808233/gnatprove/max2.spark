{
  "spark": [
    {
      "name": "Max2",
      "sloc": [
        {
          "file": "max2.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "Max2.FindMax2",
      "sloc": [
        {
          "file": "max2.ads",
          "line": 4
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
  ],
  "session_map": {
    " 1": "/home/pawel/Desktop/ADA/lista2/zadanie2/obj/gnatprove/max2__findmax2"
  },
  "proof": [
    {
      "file": "max2.adb",
      "line": 19,
      "col": 62,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 19,
      "check_col": 62,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 4,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 18,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_INIT",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 13,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 18,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        },
        "Trivial": {
          "count": 1,
          "max_steps": 0,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 18,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_PRESERV",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 166,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 18,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        },
        "Trivial": {
          "count": 1,
          "max_steps": 0,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 17,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_PRESERV",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 35,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 17,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 17,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_INIT",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 14,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 17,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 16,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_INIT",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 21,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 16,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 16,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_PRESERV",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 35,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 16,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 9,
      "col": 55,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 9,
      "check_col": 55,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 11,
      "col": 40,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 11,
      "check_col": 40,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 15,
      "col": 43,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 15,
      "check_col": 43,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 15,
      "col": 50,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 15,
      "check_col": 50,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 19,
      "col": 44,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 19,
      "check_col": 44,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 19,
      "col": 52,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 19,
      "check_col": 52,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 18,
      "col": 20,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 18,
      "check_col": 20,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 8,
      "col": 6,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 151,
              "time": 3.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 229,
              "time": 2.00000000000000E-02
            },
            "Z3": {
              "result": "Unknown (unknown)",
              "steps": 28023,
              "time": 4.00000000000000E-02
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 5
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 13,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 7,
      "check_col": 14,
      "cntexmp": {
        "max2.adb": {
          "previous": {
            "18": [
              {
                "name": "K",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "mx1",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "mx2",
                "value": "1",
                "kind": "variable"
              }
            ]
          },
          "current": {
            "11": [
              {
                "name": "K",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V",
                "value": "(others => 2)",
                "kind": "variable"
              }
            ],
            "12": [
              {
                "name": "mx1",
                "value": "0",
                "kind": "variable"
              }
            ],
            "13": [
              {
                "name": "mx1",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "mx2",
                "value": "0",
                "kind": "variable"
              }
            ],
            "14": [
              {
                "name": "K",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "mx1",
                "value": "2",
                "kind": "variable"
              }
            ],
            "16": [
              {
                "name": "mx1",
                "value": "0",
                "kind": "variable"
              }
            ],
            "17": [
              {
                "name": "mx2",
                "value": "1",
                "kind": "variable"
              }
            ],
            "18": [
              {
                "name": "V",
                "value": "(others => 2)",
                "kind": "variable"
              }
            ],
            "24": [
              {
                "name": "FindMax2'Result",
                "value": "1",
                "kind": "variable"
              },
              {
                "name": "mx2",
                "value": "1",
                "kind": "variable"
              }
            ]
          }
        },
        "max2.ads": {
          "previous": {
          },
          "current": {
            "4": [
              {
                "name": "V",
                "value": "(others => 2)",
                "kind": "variable"
              },
              {
                "name": "V'First",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V'Last",
                "value": "0",
                "kind": "variable"
              }
            ],
            "8": [
              {
                "name": "FindMax2'Result",
                "value": "1",
                "kind": "variable"
              },
              {
                "name": "V",
                "value": "(others => 2)",
                "kind": "variable"
              },
              {
                "name": "V'First",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V'Last",
                "value": "0",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 0,
      "session_dir": 1,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Max2.FindMax2",
          "sloc": [
            {
              "file": "max2.ads",
              "line": 4
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Max2",
          "sloc": [
            {
              "file": "max2.ads",
              "line": 1
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.eliminate_algebraic": 4.30600019171834E-03,
    "gnatwhy3.transformations.inline_trivial": 3.41998010873795E-01,
    "codepeer results": 2.80000003840541E-05,
    "init_why_sections": 4.30999993113801E-04,
    "gnatwhy3.transformations.eliminate_let_term": 1.39400002080947E-03,
    "gnatwhy3.transformations.detect_polymorphism": 2.50599998980761E-03,
    "globals/properties (advanced)": 1.74999993760139E-04,
    "gnatwhy3.transformations.eliminate_literal": 7.02700018882751E-03,
    "gnatwhy3.run_vcs": 3.00769992172718E-02,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 4.95300022885203E-03,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 3.41099989600480E-03,
    "flow analysis": 1.33799994364381E-03,
    "gnatwhy3.transformations.simplify_formula": 7.31500005349517E-03,
    "marking": 1.84999997145496E-04,
    "translation of standard": 3.22000007145107E-03,
    "gnatwhy3.transformations.eliminate_recursion": 9.13999974727631E-04,
    "gnatwhy3.register_vcs": 3.22300009429455E-03,
    "gnatwhy3.transformations.eliminate_epsilon": 6.65900018066168E-03,
    "globals (basic)": 1.32999994093552E-04,
    "gnatwhy3.schedule_vcs": 2.01399996876717E-03,
    "gnatwhy3.transformations.prepare_for_counterexmp": 2.42900010198355E-03,
    "gnatwhy3.save_session": 2.11740005761385E-02,
    "gnatwhy3.transformations.eliminate_inductive": 3.94900003448129E-03,
    "gnatwhy3.transformations.split_premise_right": 1.16200000047684E-03,
    "gnatwhy3.transformations.encoding_smt_if_poly": 2.90000007225899E-05,
    "gnatwhy3.transformations.eliminate_unused_hypo": 1.39247000217438E-01,
    "gnatwhy3.transformations.eliminate_builtin": 4.81199985370040E-03,
    "gnatwhy3.transformations.discriminate_if_poly": 5.90000017837156E-05,
    "gnatwhy3.init": 3.34648996591568E-01,
    "gnatwhy3.transformations.introduce_premises": 6.27000001259148E-04
  }
}
